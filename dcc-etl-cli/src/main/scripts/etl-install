#!/bin/bash
#
# Copyright 2013(c) The Ontario Institute for Cancer Research. All rights reserved.
#
# Description:
#   Downloads either a specified release verion or the latest snapshot from
#   artifactory, establishes the correct symlinks.
#
# Usage:
#  ./install -v 1.8 # installs released version
#  ./install -s     # installs the latest snapshot version

usage()
{
cat << EOF
usage: $0 options

This script installs the dcc-etl-cli from Artifactory and relinks the jar.

OPTIONS:
   -h      Show this message
   -r      Install release number (e.g. 1.8)
   -s      Install lastest snapshot
EOF
}

release=
snapshot=
while getopts “hr:s” OPTION
do
  case $OPTION in
         h)
             usage
             exit 1
             ;;
         r)
             release=$OPTARG
             ;;
         s)
             snapshot=1
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

#!/bin/bash
#
# Copyright 2013(c) The Ontario Institute for Cancer Research. All rights reserved.
#
# Description:
#   Downloads either a specified release verion or the latest snapshot from
#   artifactory, establishes the correct symlinks and restarts the application.
#
# Usage:
#  ./install -v 1.8 # installs released version
#  ./install -s     # installs the latest snapshot version

usage()
{
cat << EOF
usage: $0 options

This script installs the dcc-etl-cli from Artifactory and relinks the jar.

OPTIONS:
   -h      Show this message
   -r      Install release number (e.g. 1.8)
   -s      Install lastest snapshot
EOF
}

release=
snapshot=
while getopts “hr:s” OPTION
do
  case $OPTION in
         h)
             usage
             exit 1
             ;;
         r)
             release=$OPTARG
             ;;
         s)
             snapshot=1
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

if [[ -z $release ]] && [[ -z $snapshot ]]
then
  usage
  exit 1
fi

# Output location
basedir=$(dirname $(readlink -m $(dirname $0i)))
bindir="$basedir/bin"
libdir="$basedir/lib"

# Maven artifact location
name="dcc-etl-cli"
server="http://seqwaremaven.oicr.on.ca/artifactory"
artifact="org/icgc/dcc/$name"

if [[ -n $release ]]
then
  repo="dcc-release"
  path="$server/$repo/$artifact"
  build=$release
  version=$release
fi
if [[ -n $snapshot ]]
then
  repo="dcc-snapshot"
  path="$server/$repo/$artifact"
  version=`curl -s "$path/maven-metadata.xml" | grep latest | sed "s/.*<latest>\([^<]*\)<\/latest>.*/\1/"`
  build=`curl -s "$path/$version/maven-metadata.xml" | grep '<value>' | head -1 | sed "s/.*<value>\([^<]*\)<\/value>.*/\1/"`
fi

# Download and install
jar="$name-$build.jar"
url="$path/$version/$jar"
echo $url
wget -q -N $url -P $libdir
rm -f $libdir/$name.jar
ln -s "$jar" "$libdir/$name.jar"